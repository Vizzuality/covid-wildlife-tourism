<% content_for :page_title, Store.model_name.human(count: 2) %>

<div class="row mt-5">
  <div class="col-md-10">
    <h1><%= Store.model_name.human(count: 2) %></h1>
  </div>
  <div class="col-md-2">
    <% if current_user.admin? && params[:state] == 'waiting_approval' %>
      <%= link_to t('views.actions.approve_all'), approve_all_stores_path, method: :post,
        data: {confirm: t('views.stores.index.confirm_approval')},
        class: 'btn btn-sm btn-outline-success' %>
    <% end %>
    <% if can? :new, Store %>
      <%= link_to t('views.actions.new'), new_store_path,
        class: 'btn btn-sm btn-outline-primary' %>
    <% end %>
  </div>
</div>

<div class="row mt-2">
  <div class="col-md-12">
    <%= form_tag stores_path, method: :get, class: 'form-inline' do %>
      <%= label_tag :search, 'Search', class: 'sr-only' %>
      <%= text_field_tag :search, params[:search], class: 'form-control col-md-3 mb-2 mr-sm-2',
        placeholder: t('views.stores.search.placeholder') %>
      <%= label_tag :store_type, 'Store type', class: 'sr-only' %>
      <%= select_tag :store_type, options_for_select(enum_options_for_select(Store, :store_type), params[:store_type]), {include_blank: t('views.stores.search.filter_group'), class: 'form-control col-md-3 mb-2 mr-sm-2'} %>
      <%= label_tag :group, 'Group', class: 'sr-only' %>
      <%= select_tag :group, options_for_select(Store.groups, params[:group]), {include_blank: t('views.stores.search.filter_store_type'), class: 'form-control col-md-2 mb-2 mr-sm-2'} %>
      <%= label_tag :state, 'State', class: 'sr-only' %>
      <%= select_tag :state, options_for_select(enum_options_for_select(Store, :state), params[:state]), {include_blank: t('views.stores.search.filter_state'), class: 'form-control col-md-2 mb-2 mr-sm-2'} %>
      <%= submit_tag t('views.stores.search.button'),
        class: 'btn btn-primary mb-2' %>
    <% end %>
  </div>
</div>

<div class="row">
  <div class="col-md-12">
    <div class="main-card mb-3 card">
      <div class="card-body">
        <%= page_entries_info @stores %>
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th><%= Store.human_attribute_name(:name) %></th>
                <th><%= Store.human_attribute_name(:state) %></th>
                <th><%= Store.human_attribute_name(:group) %></th>
                <th><%= Store.human_attribute_name(:street) %></th>
                <th><%= Store.human_attribute_name(:city) %></th>
                <th><%= Store.human_attribute_name(:latitude) %></th>
                <th><%= Store.human_attribute_name(:longitude) %></th>
                <th><%= Store.human_attribute_name(:capacity) %></th>
                <th><%= Store.human_attribute_name(:details) %></th>
                <th><%= t('views.actions.title') %></th>
              </tr>
            </thead>

            <tbody>
              <% @stores.each do |store| %>
                <tr>
                  <td><%= link_to store.name, store %></td>
                  <td><%= enum_l(store, :state) %></td>
                  <td><%= store.group %></td>
                  <td><%= store.street %></td>
                  <td><%= store.city %></td>
                  <td><%= store.latitude %></td>
                  <td><%= store.longitude %></td>
                  <td><%= store.capacity %></td>
                  <td><%= store.details %></td>
                  <td>
                    <%= link_to t('views.actions.show'), store %>
                    <% if can? :manage, store %>
                      |
                      <%= link_to t('views.actions.edit'), edit_store_path(store) %>
                      |
                      <%= link_to t('views.actions.destroy'), store, method: :delete, data: { confirm: t('views.actions.confirm_destroy') } %>
                    <% end %>
                </tr>
              <% end %>
            </tbody>
          </table>
          <%= paginate @stores %>
        </div>
      </div>
    </div>
  </div>
